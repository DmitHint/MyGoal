services:
  frontend:
    build: ./frontend
    expose:
      - 3000
    depends_on:
      - backend
    networks:
      - internal_network
    environment:
      REACT_APP_API_URL: "${API_URL}"
      WDS_SOCKET_PORT: "0"
      WDS_SOCKET_HOST: '0.0.0.0'


  backend:
    build: ./backend
    expose:
      - 8080
    environment:
      SPRING_DATASOURCE_URL: ${JDBC_URL}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_MAIL_PROTOCOL: smtp
      SPRING_MAIL_HOST: smtp.yandex.ru
      SPRING_MAIL_PORT: 465
      SPRING_MAIL_USERNAME: ${EMAIL}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
      SECURITY_JWT_TOKEN_SECRET_KEY: ${JWT_SECRET_KEY}
    depends_on:
      postgresql-db:
        condition: service_healthy
    networks:
      - internal_network

  postgresql-db:
    image: postgres:latest
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal_network

  pgadmin:
    image: dpage/pgadmin4:latest
    expose:
      - 5050
    environment:
      PGADMIN_DEFAULT_EMAIL: ${EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      postgresql-db:
        condition: service_healthy
    networks:
      - internal_network

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - internal_network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    expose:
      - 8081
      - 50000
    volumes:
      - jenkins_home:/var/jenkins_home
    environment:
      JENKINS_OPTS: "--prefix=/jenkins"
    networks:
      - internal_network
    depends_on:
      - backend

volumes:
  postgres_data:
  jenkins_home:

networks:
  internal_network:
    driver: bridge
