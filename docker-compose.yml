version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - internal_network

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      postgresql-db:
        condition: service_healthy
    networks:
      - internal_network

  postgresql-db:
    image: postgres:latest
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_DB: mygoal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/00-init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal_network

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:5050"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      postgresql-db:
        condition: service_healthy
    networks:
      - internal_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - internal_network

volumes:
  postgres_data:

networks:
  internal_network:
    driver: bridge
